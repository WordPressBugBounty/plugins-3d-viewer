{"version":3,"file":"public.js","mappings":"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","sources":["webpack:///webpack/bootstrap","webpack:///webpack/runtime/global","webpack:///webpack/runtime/publicPath","webpack:///external window \"React\"","webpack:///external window \"ReactDOM\"","webpack:///../wp-utils/v1/hexToRGB.js","webpack:///./src/blocks/3d-viewer/Components/Common/Style.js","webpack:///./src/components/Icons/fullscreenOpen.js","webpack:///./src/components/Icons/Close.js","webpack:///./src/utils/createSelector.js","webpack:///./src/utils/modelRenderer.js","webpack:///./src/blocks/3d-viewer/Components/Common/SliderControllder.js","webpack:///./src/blocks/3d-viewer/Components/Common/ModelPagination.js","webpack:///./src/utils/ModelReader.js","webpack:///./src/utils.js","webpack:///./src/blocks/3d-viewer/Components/Common/Basic3DViewer.js","webpack:///./src/blocks/3d-viewer/Components/Common/Viewer.js","webpack:///./src/utils/woocommerce.js","webpack:///./src/public/product.js","webpack:///./src/utils/getClickAbleDom.js","webpack:///./src/public/index.js","webpack:///../wp-utils/v1/jsonParse.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"React\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"ReactDOM\"];","function hexToRGB(hex, type = \"string\") {\r\n  if (!hex) return;\r\n  if (hex === \"transparent\") {\r\n    return {\r\n      r: 255,\r\n      g: 255,\r\n      b: 255,\r\n      a: 0,\r\n    };\r\n  }\r\n\r\n  if (hex.includes(\"rgba\")) {\r\n    const match = hex.match(/rgba?\\((\\d+),(\\d+),(\\d+)(?:,([\\d.]+))?\\)/);\r\n    if (match) {\r\n      const [, r, g, b, a = 1] = match.map(Number);\r\n      return { r, g, b, a };\r\n    }\r\n    return null; // Return null for invalid input\r\n  }\r\n\r\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i.exec(hex.replace(\"#\", \"\"));\r\n  return result\r\n    ? {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16),\r\n        a: parseInt(result[4], 16) ? parseInt(result[4], 16) : parseInt(result[4], 16) === 0 ? 0 : 255,\r\n      }\r\n    : null;\r\n}\r\n\r\nexport default hexToRGB;\r\n","import { useEffect, useState } from \"react\";\n\nconst Style = ({ attributes }) => {\n    const { styles, uniqueId, woo, progressBar, additional } = attributes;\n    const { progressBarColor, thumbSize = \"90px\" } = styles;\n\n    const [CSS, setCSS] = useState(null);\n\n    useEffect(() => {\n        const CSS = `\n        #${uniqueId} {\n            width: ${`${styles?.width?.desktop || styles.width}`};\n            height: calc(${styles?.height?.desktop || styles.height});\n        }\n        .pop-up-content-wrap #${uniqueId} {\n            height: ${styles?.height?.desktop || styles.height};\n        }\n        #${uniqueId} .select {display: none}\n        \n        #${uniqueId} model-viewer {\n            background: ${styles?.bgColor} ${styles?.bgImage ? `url(${styles?.bgImage})` : \" \"} no-repeat center center;\n            background-size: cover;\n        }\n        #${uniqueId} model-viewer::part(default-progress-bar) {\n             display: ${!progressBar ? \"none\" : \"block\"}\n        }\n        #${uniqueId} .online_3d_viewer,\n        #${uniqueId} .b3dviewer-wrapper {\n            width: ${woo ? \"100%\" : `${styles?.width.desktop || styles.width}`};\n            height: ${styles?.height.desktop || styles.height};\n        }\n        @media screen and (max-width: 1024px){\n            #${uniqueId} .online_3d_viewer,\n            #${uniqueId} .b3dviewer-wrapper {\n                width: ${woo ? \"100%\" : `${styles?.width.tablet || styles.width}`};\n                height: ${styles?.height.tablet || styles.height};\n            }\n        }\n        @media screen and (max-width: 640px){\n            #${uniqueId} .online_3d_viewer,\n            #${uniqueId} .b3dviewer-wrapper {\n                width: ${woo ? \"100%\" : `${styles?.width.mobile || styles.width}`};\n                height: ${styles?.height.mobile || styles.height};\n            }\n        }\n        #${uniqueId} model-viewer::part(default-progress-bar){\n            background: ${progressBarColor};\n        }\n        #${uniqueId} .slides .slide{\n            width: ${thumbSize};\n            height: ${thumbSize};\n            padding: calc(${thumbSize} * 0.04);\n        }\n        #${uniqueId} .slide-number span{\n            font-size: calc(${thumbSize} * 0.8);\n        }\n        ${additional?.CSS}\n    `.replaceAll(/\\n?\\s\\s/g, \"\");\n        setCSS(CSS);\n    }, [uniqueId, styles, additional, progressBar]);\n\n    return <style>{CSS}</style>;\n};\n\nexport default Style;\n","const FullscreenOpen = ({ element }) => {\n\n  const handleClick = () => {\n    if (element) {\n      if(typeof element.requestFullscreen === 'function'){\n        element.requestFullscreen();\n      }else {\n\n        element.classList.add('fullscreen');\n      }\n    }\n  };\n\n  return (\n    <svg onClick={handleClick} id=\"openBtn\" width=\"24px\" height=\"24px\" viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"#222\" className=\"bi bi-arrows-fullscreen\">\n      <path\n        fillRule=\"even\"\n        d=\"M5.828 10.172a.5.5 0 0 0-.707 0l-4.096 4.096V11.5a.5.5 0 0 0-1 0v3.975a.5.5 0 0 0 .5.5H4.5a.5.5 0 0 0 0-1H1.732l4.096-4.096a.5.5 0 0 0 0-.707zm4.344 0a.5.5 0 0 1 .707 0l4.096 4.096V11.5a.5.5 0 1 1 1 0v3.975a.5.5 0 0 1-.5.5H11.5a.5.5 0 0 1 0-1h2.768l-4.096-4.096a.5.5 0 0 1 0-.707zm0-4.344a.5.5 0 0 0 .707 0l4.096-4.096V4.5a.5.5 0 1 0 1 0V.525a.5.5 0 0 0-.5-.5H11.5a.5.5 0 0 0 0 1h2.768l-4.096 4.096a.5.5 0 0 0 0 .707zm-4.344 0a.5.5 0 0 1-.707 0L1.025 1.732V4.5a.5.5 0 0 1-1 0V.525a.5.5 0 0 1 .5-.5H4.5a.5.5 0 0 1 0 1H1.732l4.096 4.096a.5.5 0 0 1 0 .707z\"\n      ></path>\n    </svg>\n  );\n};\n\nexport default FullscreenOpen;\n","// import { withSelect } from \"@wordpress/data\";\n\n// const Close = ({ isSidebarOpened }) => {\n//   return (\n//     <svg id=\"closeBtn\" className={isSidebarOpened ? \"sidebar-open\" : \"sidebar-closed\"} width=\"34px\" height=\"34px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n//       <path fill=\"none\" stroke=\"#333\" strokeWidth=\"2\" d=\"M7,7 L17,17 M7,17 L17,7\"></path>\n//     </svg>\n//   );\n// };\n\n// export default withSelect((select) => {\n//   const { isEditorSidebarOpened } = select(\"core/edit-post\");\n//   return {\n//     isSidebarOpened: isEditorSidebarOpened(),\n//   };\n// })(Close);\n\nconst Close = ({element}) => {\n  function closeFullscreen() {\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (document.webkitExitFullscreen) {\n      // / Safari /;\n      document.webkitExitFullscreen();\n    } else if (document.msExitFullscreen) {\n      // / IE11 /;\n      document.msExitFullscreen();\n    }\n    element?.classList.remove('fullscreen');\n  }\n  return (\n    <svg id=\"closeBtn\" onClick={closeFullscreen} className=\"sidebar-open\" width=\"34px\" height=\"34px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fill=\"none\" stroke=\"#f2f2f2\" strokeWidth=\"2\" d=\"M7,7 L17,17 M7,17 L17,7\"></path>\n    </svg>\n  );\n};\n\nexport default Close;\n","const createSelector = (element, options = [], selected, show = true) => {\n    if (element?.parentElement) {\n        if (show) {\n            element.parentElement.style.display = \"inline-block\";\n        }\n        element.innerHTML = \"\";\n    } else {\n        return;\n    }\n    if (!options.length && element.parentElement) {\n        if (window.location.href.includes(\"wp-admin\")) {\n            options[0] = \"not available\";\n        } else {\n            element.parentElement.style.display = \"none\";\n        }\n    }\n    for (const name of options) {\n        const option = document.createElement(\"option\");\n        option.value = name;\n        option.textContent = name;\n        element.appendChild(option);\n        if (name === selected) {\n            option.selected = true;\n        }\n    }\n};\n\nexport default createSelector;","import createSelector from \"./createSelector\";\n\nconst modelRenderer = (params = {}) => {\n    const { animation = false, variant = false, wrapper } = params;\n    if (!wrapper) {\n        return;\n    }\n\n    //model viewer\n    const modelViewer = wrapper.querySelector(\"model-viewer\");\n    if (!modelViewer) return false;\n\n    if (modelViewer.src) {\n        try {\n            const source = new URL(modelViewer.src);\n            if (source?.protocol !== window.location.protocol) {\n                modelViewer.src = source.href.replace(source.protocol, window.location.protocol);\n            }\n        } catch (error) {\n            console.warn(error.message, modelViewer.src);\n        }\n    }\n\n    const selectedAnimation = modelViewer.dataset.animation;\n\n    const select = wrapper.querySelector(\"#variant\");\n    const animations = wrapper.querySelector(\"#animations\");\n    const percentageWrapper = wrapper.querySelector(\".percentageWrapper\");\n    const percentageElement = percentageWrapper?.querySelector(\".percentage\");\n\n    if (percentageWrapper && (modelViewer.reveal === \"interaction\" || modelViewer.loaded)) {\n        percentageWrapper.style.display = \"none\";\n    }\n\n    modelViewer.addEventListener(\"load\", () => {\n        createSelector(select, modelViewer.availableVariants, \"\", variant);\n        createSelector(animations, modelViewer.availableAnimations, selectedAnimation, animation);\n        modelViewer.animationName = selectedAnimation;\n\n        setTimeout(() => {\n            if (percentageWrapper) {\n                percentageWrapper.style.display = \"none\";\n            }\n        }, 100);\n    });\n\n    // hide the percentage wrapper if by chance  it does not hide after loading the model\n    const interval = setInterval(() => {\n        if (modelViewer.loaded) {\n            clearInterval(interval);\n        }\n        if (percentageWrapper) {\n            percentageWrapper.style.display = \"none\";\n        }\n    }, 5000);\n\n    //show percentage\n    if (percentageElement) {\n        modelViewer.addEventListener(\"progress\", (event) => {\n            percentageWrapper.style.display = \"block\";\n            percentageElement.innerHTML = parseInt(event.detail.totalProgress * 100) + \"%\";\n        });\n    }\n\n    select &&\n        select.addEventListener(\"input\", (event) => {\n            modelViewer.variantName = event.target.value;\n        });\n    animations &&\n        animations.addEventListener(\"input\", (event) => {\n            modelViewer.animationName = event.target.value;\n        });\n\n    // slides\n    const slides = wrapper.querySelectorAll(\".slide\");\n    for (const slide of slides) {\n        slide.addEventListener(\"click\", (e) => {\n            e.preventDefault();\n            modelViewer.src = slide?.dataset?.source;\n            modelViewer.poster = slide?.dataset?.poster;\n            slides.forEach((element) => {\n                element.classList.remove(\"selected\");\n            });\n            slide.classList.add(\"selected\");\n            if (select) select.innerHTML = \"\";\n        });\n    }\n\n    document.querySelector(\".slider\")?.addEventListener(\"beforexrselect\", (ev) => {\n        ev.preventDefault();\n    });\n    // });\n}\nexport default modelRenderer;","import React from \"react\";\n\nconst SliderController = ({ currentItem, setCurrentItem, models }) => {\n  return (\n    <>\n      <div className=\"slideController\">\n        <svg fill=\"#000000\" onClick={() => setCurrentItem(currentItem > 0 ? currentItem - 1 : currentItem)} className={`arrow-left ${currentItem > 0 ? \"\" : \"disabled\"}`} width=\"24px\" height=\"24px\" viewBox=\"-78.5 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\">\n          <title>left</title>\n          <path d=\"M257 64L291 98 128 262 291 426 257 460 61 262 257 64Z\" />\n        </svg>\n        <svg onClick={() => setCurrentItem(currentItem < models.length - 1 ? currentItem + 1 : currentItem)} fill=\"#000000\" className={`arrow-right ${currentItem < models.length - 1 ? \"\" : \"disabled\"}`} width=\"24px\" height=\"24px\" viewBox=\"-77 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\">\n          <title>right</title>\n          <path d=\"M98 460L64 426 227 262 64 98 98 64 294 262 98 460Z\" />\n        </svg>\n      </div>\n    </>\n  );\n};\n\nexport default SliderController;\n","import React from \"react\";\n\nconst ModelPagination = ({ attributes, currentItem, setCurrentItem, isPagination }) => {\n  const { multiple, woo, models } = attributes;\n  return (\n    <>\n      {multiple && !woo && isPagination && (\n        <div className=\"slider\">\n          <div className=\"slides\">\n            {models.map((model, index) => (\n              <button\n                key={index}\n                className={`slide ${index === currentItem ? \"selected\" : \"\"} ${model.poster ? \"\" : \"slide-number\"}`}\n                data-source={model?.modelUrl}\n                data-poster={model?.poster}\n                onClick={() => setCurrentItem(index)}\n              >\n                {model.poster ? <img src={model?.poster} /> : <span>{index + 1}</span>}\n              </button>\n            ))}\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ModelPagination;\n","import { rgbaStringToFactor } from \"./../utils\";\n\nclass ModelReader {\n  constructor(model) {\n    window.model = model;\n    this.model = model;\n    this.copy = null;\n    this.thumbnailsById = new Map();\n    this.thumbnail_size = 256;\n    this.textures = [];\n    this.texturesArray = [];\n    this.textureChannels = [];\n    this.defaultMaterialData = null;\n    // this.init();\n    this.initialized = false;\n    this.sizes = [];\n    this.copy = null;\n    this.readyCallbacks = [];\n    this.isReady = false;\n\n    if (this.model.loaded) {\n      this.onLoad();\n    } else {\n      this.model.addEventListener(\"load\", this.onLoad.bind(this));\n    }\n  }\n  initialize() {\n    this.isReady = true;\n    this.readyCallbacks.forEach((callback) => callback());\n    this.readyCallbacks = [];\n  }\n\n  onReady(callback) {\n    if (this.isReady) {\n      callback();\n    } else {\n      this.readyCallbacks.push(callback);\n    }\n  }\n\n  async onLoad() {\n    this.modelUrl = this.model.src;\n    this.getDefaultMaterialData();\n\n    this.thumbnailsById = await this.createThumbnails();\n\n    if (window.pagenow) {\n      const loaded = await this.loadModelWithoutAppending(this.model.src + \"?\" + Date.now());\n      this.copy = loaded.model;\n      const thumbnailsById = await this.createThumbnails(new Map(), this.copy.materials);\n      this.copy.thumbnailsById = thumbnailsById;\n    }\n    this.initialize();\n  }\n\n  getTextureId(gltfImage) {\n    return gltfImage.uri ?? gltfImage.bufferView.toString();\n  }\n\n  /**\n   * Retrieves stored textures, generating them if not already available.\n   * @returns {Promise<Object>} - The texture data.\n   */\n  async getTextures() {\n    if (Object.keys(this.textures).length === 0 && this.model) {\n      await this.createThumbnails();\n    }\n    return this.textures;\n  }\n  async getBlobFileSize(blobUrl) {\n    try {\n      const response = await fetch(blobUrl);\n      if (!response.ok) throw new Error(\"Failed to fetch the Blob URL\");\n\n      const blob = await response.blob();\n      return blob.size; // Size in bytes\n    } catch (error) {\n      console.error(\"Error getting Blob file size:\", error);\n      return null;\n    }\n  }\n\n  /**\n   * Stores texture thumbnails in the cache.\n   * @param {Map} thumbnailsById - The texture cache map.\n   * @param {Object} textureInfo - The texture information.\n   * @returns {Promise<string|null>} - The texture ID.\n   */\n  async pushThumbnail(thumbnailsById, textureInfo) {\n    const { texture } = textureInfo || {};\n    if (!texture || !texture.source) return null;\n\n    const id = this.getTextureId(texture.source);\n    if (!thumbnailsById.has(id)) {\n      const objectUrl = await texture.source.createThumbnail(this.thumbnail_size, this.thumbnail_size);\n      const size = await this.getBlobFileSize(objectUrl);\n      thumbnailsById.set(id, { objectUrl, texture, size, id });\n      if (!this.textures[id]) {\n        this.texturesArray.push(id);\n        this.textures[id] = objectUrl;\n        this.sizes[id + \"_\" + size] = objectUrl;\n      }\n    }\n    return id;\n  }\n\n  async createThumbnails(thumbnailsById, materials = this.model.model?.materials) {\n    if (!thumbnailsById) {\n      thumbnailsById = new Map();\n    }\n    for (const material of materials || []) {\n      await material.ensureLoaded();\n      const { pbrMetallicRoughness, normalTexture, emissiveTexture, occlusionTexture } = material;\n      const { baseColorTexture, metallicRoughnessTexture } = pbrMetallicRoughness;\n      await this.pushThumbnail(thumbnailsById, normalTexture);\n      await this.pushThumbnail(thumbnailsById, emissiveTexture);\n      await this.pushThumbnail(thumbnailsById, occlusionTexture);\n      await this.pushThumbnail(thumbnailsById, baseColorTexture);\n      await this.pushThumbnail(thumbnailsById, metallicRoughnessTexture);\n    }\n    // this.thumbnailsById = thumbnailsById;\n    return thumbnailsById;\n  }\n  getAllMaterialData() {\n    if (!this.model.model) {\n      console.warn(\"Model not loaded yet.\");\n      return {};\n    }\n\n    const materialsData = {};\n\n    this.model.model.materials.forEach(async (material) => {\n      await material.ensureLoaded();\n\n      const materialName = material.name || `Material_${Math.random().toString(36).substr(2, 5)}`; // Ensure a unique key if no name exists\n\n      materialsData[materialName] = {\n        baseColor: {\n          texture: {\n            name: material.pbrMetallicRoughness.baseColorTexture?.texture?.source.name || null,\n            uri: material.pbrMetallicRoughness.baseColorTexture?.texture?.source.uri || null,\n          },\n          factor: material.pbrMetallicRoughness.baseColorFactor || [1, 1, 1, 1], // Default to white\n        },\n        metallicRoughness: {\n          texture: {\n            name: material.pbrMetallicRoughness.metallicRoughnessTexture?.texture?.source.name || null,\n            uri: material.pbrMetallicRoughness.metallicRoughnessTexture?.texture?.source.uri || null,\n          },\n          factor: [material.pbrMetallicRoughness.metallicFactor || 1, material.pbrMetallicRoughness.roughnessFactor || 1],\n        },\n        normal: {\n          texture: {\n            uri: material.normalTexture?.texture?.source.uri || null,\n            name: material.normalTexture?.texture?.source.name || null,\n          },\n        },\n        emissive: {\n          texture: {\n            name: material.emissiveTexture?.texture?.source.name || null,\n            uri: material.emissiveTexture?.texture?.source.uri || null,\n          },\n          factor: material.emissiveFactor || [0, 0, 0], // Default to black\n        },\n        occlusion: {\n          texture: {\n            name: material.occlusionTexture?.texture?.source.name || null,\n            uri: material.occlusionTexture?.texture?.source.uri || null,\n          },\n        },\n      };\n    });\n\n    return materialsData;\n  }\n\n  getDefaultMaterialData() {\n    if (!this.defaultMaterialData) {\n      this.defaultMaterialData = this.getAllMaterialData();\n    }\n    return this.defaultMaterialData;\n  }\n\n  /**\n   * Updates the texture and factor of a material for a specific channel.\n   *\n   * @param {THREE.Material} material - The material to update.\n   * @param {string} channel - The channel to update (e.g., 'baseColor', 'metallicRoughness', 'normal', 'emissive', 'occlusion').\n   * @param {string|null} textureUri - The URI of the new texture. If null, removes the current texture.\n   * @param {string} factor - The new factor for the color channels.\n   * @param {string} textureName - The name of the new texture.\n   *\n   * @returns {void}\n   */\n  async updateMaterialTextureAndFactor(material, channel, factor, textureUri = null, textureName = `texture_${Date.now()}`) {\n    if (!this.model?.model || !material) {\n      console.warn(\"Model or Material not found.\");\n      return;\n    }\n\n    if (factor) {\n      if (channel === \"baseColor\") material.pbrMetallicRoughness.setBaseColorFactor(rgbaStringToFactor(factor));\n      if (channel === \"metallicRoughness\") {\n        material.pbrMetallicRoughness.setMetallicFactor(factor[0]);\n        material.pbrMetallicRoughness.setRoughnessFactor(factor[1]);\n      }\n      if (channel === \"emissive\") material.setEmissiveFactor(rgbaStringToFactor(factor));\n    }\n\n    if (textureUri === \"default\") {\n      if (channel.includes(\"base\") || channel.includes(\"metallic\")) {\n        const texture = this.copy.getMaterialByName(material.name).pbrMetallicRoughness[channel + \"Texture\"].texture;\n        material.pbrMetallicRoughness[channel + \"Texture\"].setTexture(texture);\n      } else {\n        const texture = this.copy.getMaterialByName(material.name)[channel + \"Texture\"].texture;\n        material[channel + \"Texture\"].setTexture(texture);\n      }\n      console.log(`Removed texture from '${channel}' of material '${material.name}'.`);\n      return;\n    }\n\n    // Handle removing texture if textureUri is null\n    if (!textureUri) {\n      if (channel.includes(\"base\") || channel.includes(\"metallic\")) {\n        material.pbrMetallicRoughness[channel + \"Texture\"].setTexture(null);\n      } else {\n        material[channel + \"Texture\"].setTexture(null);\n      }\n      console.log(`Removed texture from '${channel}' of material '${material.name}'.`);\n      return;\n    }\n\n    // Create and apply new texture\n    try {\n      if (typeof textureUri === \"string\") {\n        textureUri = await this.model.createTexture(textureUri);\n        textureUri.name = textureName;\n      }\n      // const texture = await this.model.createTexture(textureUri);\n      // texture.name = textureName; // Unique name\n\n      if (channel.includes(\"base\") || channel.includes(\"metallic\")) {\n        material.pbrMetallicRoughness[channel + \"Texture\"].setTexture(textureUri);\n      } else {\n        material[channel + \"Texture\"].setTexture(textureUri);\n      }\n\n      console.log(`Applied new texture ${textureName} to '${channel}' of material '${material.name}'.`);\n    } catch (error) {\n      console.error(\"Error creating texture:\", error);\n    }\n  }\n\n  /**\n   * Applies textures and factors to materials based on the provided applied textures object.\n   * If a material name and channel are provided, applies the texture and factor to a specific material and channel.\n   * If only applied textures are provided, applies the textures and factors to all materials and channels.\n   *\n   * @param {Object} appliedTextures - An object containing the textures and factors to apply.\n   * @param {string} [materialName=null] - The name of the material to apply the texture and factor to.\n   * @param {string} [channel=null] - The channel (e.g., 'baseColor', 'metallicRoughness', 'normal', 'emissive', 'occlusion') to apply the texture and factor to.\n   *\n   * @returns {void}\n   */\n  async applyTexture(appliedTextures, materialName = null, channel = null) {\n    window.modelReader = this;\n    if (!appliedTextures) return;\n\n    if (materialName && channel) {\n      const { name, url } = appliedTextures[materialName]?.[channel]?.texture || {};\n      const material = this.model?.model?.getMaterialByName(materialName);\n      let textureImage = url || this.getTextureByName(name);\n      // let textureImage = appliedTextures[materialName]?.[channel]?.texture?.url;\n      if (!appliedTextures[materialName]?.[channel]?.texture) {\n        textureImage = \"default\";\n      }\n      const factor = appliedTextures[materialName]?.[channel]?.factor || null;\n      this.updateMaterialTextureAndFactor(material, channel, factor, textureImage, name);\n      return;\n    }\n\n    Object.entries(appliedTextures).forEach(([matName, channels]) => {\n      const material = this.model?.model?.getMaterialByName(matName);\n      if (!material) {\n        console.warn(`Material '${matName}' not found.`);\n        return;\n      }\n\n      Object.keys(channels).forEach((ch) => {\n        const { name, url } = channels[ch]?.texture || {};\n        let textureImage = url || this.getTextureByName(name); //|| textures[this.texturesArray[index]] || textures[name];\n        if (!channels[ch]?.texture) {\n          textureImage = \"default\";\n        }\n        const factor = channels[ch]?.factor || null;\n\n        this.updateMaterialTextureAndFactor(material, ch, factor, textureImage, name);\n      });\n    });\n  }\n\n  async shakeMaterialFactor(material, duration = 500) {\n    if (!material) return;\n    if (typeof material === \"string\") {\n      material = this.getMaterialByName(material);\n    }\n    const originalFactor = material.pbrMetallicRoughness.baseColorFactor.slice();\n    material.pbrMetallicRoughness.setBaseColorFactor([1, 0, 0, 1]);\n    setTimeout(() => {\n      material.pbrMetallicRoughness.setBaseColorFactor(originalFactor);\n    }, duration);\n  }\n\n  /**\n   * Retrieves the URI of a texture by name.\n   */\n  getTextureURIByName(name) {\n    return name.includes(\"blob\") ? name : this.textures[name] || null;\n  }\n\n  getMaterialByName(name) {\n    return this.model.model.getMaterialByName(name);\n  }\n\n  getTexturesArray() {\n    return this.texturesArray;\n  }\n\n  getTextureChannels() {\n    return [\n      {\n        label: \"Base Color\",\n        value: \"baseColor\",\n      },\n      {\n        label: \"Metallic Roughness\",\n        value: \"metallicRoughness\",\n      },\n      {\n        label: \"Normal Map\",\n        value: \"normal\",\n      },\n      {\n        label: \"Emissive\",\n        value: \"emissive\",\n      },\n      {\n        label: \"Occlusion\",\n        value: \"occlusion\",\n      },\n    ];\n  }\n\n  getMaterialsNameForSelectControl() {\n    if (!this.model.loaded) {\n      console.warn(\"Model not loaded yet\");\n      return [];\n    }\n    if (Array.isArray(this.model.model.materials)) {\n      return this.model.model.materials.map((item) => {\n        const label = item.name.replace(\"_mtl\", \"\").replaceAll(\"_\", \" \");\n        return { label, value: item.name };\n      });\n    }\n    return [];\n  }\n  getFirstMaterialName() {\n    if (!this.model.loaded || !this.model.model) {\n      console.warn(\"Model not loaded yet\");\n      return null;\n    }\n    if (Array.isArray(this.model.model.materials)) {\n      return this.model.model.materials[0].name;\n    }\n    return null;\n  }\n\n  getTextureById(textureId) {\n    return this.thumbnailsById.get(textureId);\n  }\n\n  async downloadTexture(textureId, size = 512) {\n    const { texture = null } = this.getTextureById(textureId);\n    if (!texture) {\n      console.error(\"Texture not found!\");\n      return;\n    }\n    const objectUrl = await texture.source.createThumbnail(size, size);\n\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = size;\n    canvas.height = size;\n    const ctx = canvas.getContext(\"2d\");\n\n    const image = new Image();\n    image.crossOrigin = \"anonymous\";\n    image.src = objectUrl;\n\n    image.onload = () => {\n      ctx.drawImage(image, 0, 0, size, size);\n      const link = document.createElement(\"a\");\n      link.href = canvas.toDataURL(\"image/png\");\n      link.download = `texture_${textureId}.png`;\n      link.click();\n    };\n\n    image.onerror = () => {\n      console.error(\"Failed to load texture image.\");\n    };\n  }\n\n  // async createAndApplyTexture (material, channel, value, name = \"raju\" + new Date().getTime()) {\n  //   const texture = await this.model.createTexture(value);\n  //   texture.name = name;\n  //   if (channel.includes(\"base\") || channel.includes(\"metallic\")) {\n  //     material.pbrMetallicRoughness[channel+'Texture'].setTexture(texture);\n  //   } else {\n  //     material[channel+'Texture'].setTexture(texture);\n  //   }\n  // }\n\n  deepCloneModel() {\n    const clonedModel = this.model.originalModel.clone(true); // Clones recursively\n\n    clonedModel.traverse((node) => {\n      if (node.isMesh) {\n        // Clone material (to avoid sharing)\n        if (node.material) {\n          node.material = node.material.clone();\n        }\n\n        // Clone geometry (if needed)\n        if (node.geometry) {\n          node.geometry = node.geometry.clone();\n        }\n\n        // Clone textures (to avoid sharing)\n        if (node.material.map) {\n          node.material.map = node.material.map.clone();\n          node.material.map.needsUpdate = true;\n        }\n      }\n    });\n\n    return clonedModel;\n  }\n\n  async loadModelWithoutAppending(src) {\n    return new Promise((resolve, reject) => {\n      const modelViewer = document.createElement(\"model-viewer\");\n      modelViewer.src = src;\n      modelViewer.setAttribute(\"loading\", \"eager\");\n      modelViewer.style.display = \"none\"; // Hide it from view\n      modelViewer.style.height = \"0\"; // Hide it from view\n      document.body.appendChild(modelViewer); // Append to DOM (but hidden)\n\n      modelViewer.addEventListener(\"load\", () => {\n        resolve(modelViewer);\n        // Remove it after loading if you don't need it anymore\n        // modelViewer.remove();\n      });\n\n      modelViewer.addEventListener(\"error\", (e) => {\n        reject(new Error(`Model failed to load: ${e.message}`));\n      });\n    });\n  }\n  /**\n   * Retrieves the texture object, its name, and URI by material name and channel.\n   *\n   * @param {string} materialName - The name of the material.\n   * @param {string} channel - The channel (e.g., 'baseColor', 'metallicRoughness', 'normal', 'emissive', 'occlusion').\n   *\n   * @returns {Object|null} - An object containing the texture object, its name, and URI.\n   *   If the material or texture is not found, returns null.\n   */\n  getTextureByName(textureName) {\n    // if (!this.copy) {\n    //     console.warn(\"Model copy is not generated.\");\n    //     return null;\n    // }\n\n    if (!textureName) return null;\n\n    try {\n      if (this.copy?.thumbnailsById) {\n        return this.copy.thumbnailsById.get(textureName).texture;\n      }\n      if (this.thumbnailsById) {\n        return this.thumbnailsById.get(textureName)?.texture;\n      }\n    } catch (error) {\n      console.error(error.message, textureName);\n    }\n    return null;\n  }\n\n  createCopy() {\n    // const\n  }\n}\n\nexport default ModelReader;\n","import { textureChannels } from './blocks/3d-viewer/data';\nimport ModelReader from './utils/ModelReader';\nimport { produce } from \"immer\";\n\nexport function getParams(url = \"\") {\n  url = url || location?.href;\n  var queryStart = url.indexOf(\"?\") + 1,\n    queryEnd = url.indexOf(\"#\") + 1 || url.length + 1,\n    query = url.slice(queryStart, queryEnd - 1),\n    pairs = query.replace(/\\+/g, \" \").split(\"&\"),\n    parms = {},\n    i,\n    n,\n    v,\n    nv;\n\n  if (query === url || query === \"\") return;\n\n  for (i = 0; i < pairs.length; i++) {\n    nv = pairs[i].split(\"=\", 2);\n    n = decodeURIComponent(nv[0]);\n    v = decodeURIComponent(nv[1]);\n\n    // eslint-disable-next-line no-prototype-builtins\n    if (!parms.hasOwnProperty(n)) parms[n] = [];\n    parms[n] = nv.length === 2 ? v : null;\n  }\n  return parms;\n}\n\nexport function restoreOriginalImageSrc(imageSrc) {\n  // Define a regular expression pattern to match sizes like \"-100x100\", \"-200x200\", etc.\n  const sizePattern = /-\\d{2,4}x\\d{2,4}/g;\n\n  // Remove any size string from the image src and the hyphen before it\n  const originalSrc = imageSrc.replace(sizePattern, \"\");\n\n  return originalSrc;\n}\n\nexport function isImageSource(str) {\n  // Regular expression to match common image file extensions\n  const imageExtensions = /\\.(jpg|jpeg|png|gif|bmp|svg|webp)$/i;\n\n  // Check if the string matches the image extension pattern\n  return imageExtensions.test(str);\n}\n\nexport function findParentUntilMultipleChildren(element) {\n  let parent = element.parentElement;\n\n  while (parent && parent.children.length === 1) {\n    element = parent;\n    parent = parent.parentElement;\n  }\n\n  return element;\n}\n\nexport function findParentAnchorTag(element) {\n  let parent = element.parentElement;\n\n  while (parent && parent.tagName === \"A\") {\n    element = parent;\n    parent = parent.parentElement;\n  }\n\n  return element;\n}\n\nexport function getMaterials(materials) {\n  if (Array.isArray(materials)) {\n    return materials.map((item) => item.name);\n  }\n  return [];\n}\n\nexport function getMaterialsNameForSelectControl(materials = []) {\n  if (Array.isArray(materials)) {\n    return materials.map((item) => {\n      const label = item.name.replace(\"_mtl\", \"\").replaceAll(\"_\", \" \");\n      return { label, value: item.name };\n    });\n  }\n  return [];\n}\n\nexport function rgbaToFactor(r, g, b, a = 255) {\n  return [r / 255, g / 255, b / 255, a / 255];\n}\n\nexport function sRGBToLinear(value) {\n  value /= 255;\n  return value <= 0.04045 ? value / 12.92 : ((value + 0.055) / 1.055) ** 2.4;\n}\n\nexport function rgbaStringToFactor(rgbaString) {\n  if (!['rgba', 'rgb'].includes(isRGBorRGBA(rgbaString))) {\n    return rgbaString;\n  }\n  const match = rgbaString.match(/rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+),\\s*([\\d.]+)\\)/);\n  if (!match) return null;\n\n  const [_, r, g, b, a] = match.map(Number);\n  return [sRGBToLinear(r), sRGBToLinear(g), sRGBToLinear(b), a]; // Convert RGB, keep alpha\n}\n\nexport function factorToRgbaString(factor) {\n  if (!Array.isArray(factor) || (factor.length !== 3 && factor.length !== 4)) {\n    return factor;\n  }\n\n  const r = Math.round(factor[0] * 255);\n  const g = Math.round(factor[1] * 255);\n  const b = Math.round(factor[2] * 255);\n  const a = factor.length === 4 ? factor[3] : 1; // Default alpha to 1 if not present\n\n  return factor.length === 4 ? `rgba(${r}, ${g}, ${b}, ${a})` : `rgb(${r}, ${g}, ${b})`;\n}\n\nexport function rgbaToHex(rgba) {\n  // Extract the RGBA values from the string\n  try {\n    const rgbaValues = rgba.match(/rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+),?\\s*([0-9.]+)?\\)/);\n\n    if (!rgbaValues) {\n      throw new Error(\"Invalid RGBA color string\");\n    }\n\n    // Parse the R, G, B values\n    const r = parseInt(rgbaValues[1]);\n    const g = parseInt(rgbaValues[2]);\n    const b = parseInt(rgbaValues[3]);\n\n    // Parse the alpha value, default to 1 if not provided\n    const a = rgbaValues[4] !== undefined ? parseFloat(rgbaValues[4]) : 1;\n\n    // Convert to hex\n    const toHex = (n) => n.toString(16).padStart(2, \"0\").toUpperCase();\n\n    // Convert alpha to hex (if needed)\n    const alphaHex = toHex(Math.round(a * 255));\n\n    // Return hex with or without alpha\n    return `#${toHex(r)}${toHex(g)}${toHex(b)}${a < 1 ? alphaHex : \"\"}`;\n  } catch (error) {\n    return null;\n  }\n}\n\nexport function getAllMaterialData(model) {\n  if (!model.model) {\n    console.warn(\"Model not loaded yet.\");\n    return {};\n  }\n\n  const materialsData = {};\n\n  model.model.materials.forEach((material) => {\n    const materialName = material.name || `Material_${Math.random().toString(36).substr(2, 5)}`; // Ensure a unique key if no name exists\n\n    materialsData[materialName] = {\n      baseColor: {\n        texture: material.pbrMetallicRoughness.baseColorTexture?.texture?.source?.uri || null,\n        factor: material.pbrMetallicRoughness.baseColorFactor || [1, 1, 1, 1], // Default to white\n        default: {\n          texture: material.pbrMetallicRoughness.baseColorTexture?.texture?.source?.uri || null,\n          factor: material.pbrMetallicRoughness.baseColorFactor || [1, 1, 1, 1], // Default to white\n        }\n      },\n      metallicRoughness: {\n        texture: material.pbrMetallicRoughness.metallicRoughnessTexture?.texture?.source?.uri || null,\n        uri: material.pbrMetallicRoughness.metallicRoughnessTexture?.texture?.source?.uri || null,\n        textureName: material.pbrMetallicRoughness.metallicRoughnessTexture?.texture?.source?.textureName || null,\n        factor: [\n          material.pbrMetallicRoughness.metallicFactor || 1,\n          material.pbrMetallicRoughness.roughnessFactor || 1\n        ],\n        default: {\n          uri: material.pbrMetallicRoughness.metallicRoughnessTexture?.texture?.source?.uri || null,\n          textureName: material.pbrMetallicRoughness.metallicRoughnessTexture?.texture?.source?.textureName || null,\n          factor: [\n            material.pbrMetallicRoughness.metallicFactor || 1,\n            material.pbrMetallicRoughness.roughnessFactor || 1\n          ],\n        }\n      },\n      normal: {\n        texture: material.normalTexture?.texture?.source?.uri || null,\n        default: {\n          texture: material.normalTexture?.texture?.source?.uri || null,\n        }\n      },\n      emissive: {\n        texture: material.emissiveTexture?.texture?.source?.uri || null,\n        factor: material.emissiveFactor || [0, 0, 0], // Default to black\n        default: {\n          texture: material.emissiveTexture?.texture?.source?.uri || null,\n          factor: material.emissiveFactor || [0, 0, 0], // Default to black\n        }\n      },\n      occlusion: {\n        texture: material.occlusionTexture?.texture?.source?.uri || null,\n        default: {\n          texture: material.occlusionTexture?.texture?.source?.uri || null,\n        }\n      },\n    };\n  });\n  return materialsData;\n}\n\n\nexport function isRGBorRGBA(color) {\n  const rgbRegex = /^rgb\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}\\s*,\\s*\\d{1,3}\\s*\\)$/i;\n  const rgbaRegex = /^rgba\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}\\s*,\\s*\\d{1,3}\\s*,\\s*(0|1|0?\\.\\d+)\\s*\\)$/i;\n\n  if (rgbaRegex.test(color)) return \"rgba\";\n  if (rgbRegex.test(color)) return \"rgb\";\n  return false; // Not a valid RGB/RGBA string\n}\n\nexport const createAndApplyTexture = async (model, material, channel, value, name = \"raju\" + new Date().getTime()) => {\n  const texture = await model.createTexture(value);\n  texture.name = name;\n  if (channel.includes(\"base\") || channel.includes(\"metallic\")) {\n    material.pbrMetallicRoughness[channel + 'Texture'].setTexture(texture);\n  } else {\n    material[channel + 'Texture'].setTexture(texture);\n  }\n};\n\n\nexport const applyTexture = async (model, appliedTextures) => {\n  const modelReader = new ModelReader(model);\n  window.modelReader = modelReader;\n  const textures = await modelReader.getTextures();\n  const texturesArray = modelReader.getTexturesArray();\n\n\n  Object.keys(appliedTextures).map(materialName => {\n    const material = model?.model?.getMaterialByName(materialName);\n\n    if (!material) {\n      return;\n    }\n\n    textureChannels.map(item => {\n      const channel = item?.value || null;\n\n      if (!channel) {\n        return;\n      }\n\n      const { name, index } = appliedTextures[materialName]?.[channel]?.texture || {};\n      const textureImage = textures[texturesArray[index]] || textures[name];\n      const factor = appliedTextures[materialName]?.[channel]?.factor || null;\n      if (textureImage) {\n\n        createAndApplyTexture(model, material, channel, textureImage, name);\n      }\n\n      if (factor) {\n        if (channel === 'baseColor') {\n          material.pbrMetallicRoughness.setBaseColorFactor(rgbaStringToFactor(factor));\n        }\n        if (channel === 'emissive') {\n          material.setEmissiveFactor(rgbaStringToFactor(factor));\n        }\n      }\n\n    })\n  })\n}\n\n\n\n\nexport function resetMaterialProperty(defaultMaterialData, materialName, channel, property) {\n  if (!defaultMaterialData[materialName][channel].default) {\n    return defaultMaterialData;\n  }\n  if (!defaultMaterialData[materialName]) {\n    console.warn(`Material '${materialName}' not found in default data.`);\n    return defaultMaterialData;\n  }\n\n  if (!defaultMaterialData[materialName][channel]) {\n    console.warn(`Channel '${channel}' not found for material '${materialName}'.`);\n    return defaultMaterialData;\n  }\n\n  if (property !== \"factor\" && property !== \"texture\") {\n    console.warn(`Invalid property '${property}'. Use 'factor' or 'texture'.`);\n    return defaultMaterialData;\n  }\n\n  return produce(defaultMaterialData, (draft) => {\n    if (property === \"factor\") {\n      draft[materialName][channel].factor = draft[materialName][channel].default.factor;\n    } else if (property === \"texture\") {\n      draft[materialName][channel].texture = draft[materialName][channel].default.texture;\n    }\n  });\n}\n\n\nexport function merge(target, source) {\n  // If source is not an object, return a copy of the target as is\n  if (typeof source !== 'object' || source === null) {\n    return { ...target };\n  }\n\n  // If the target is not an object, create a new object\n  if (typeof target !== 'object' || target === null) {\n    target = Array.isArray(source) ? [] : {};\n  }\n\n  // Create a new object to store merged results\n  const result = Array.isArray(target) ? [] : {};\n\n  // Merge target and source\n  for (const key in target) {\n    if (Object.prototype.hasOwnProperty.call(target, key)) {\n      result[key] = target[key];\n    }\n  }\n\n  for (const key in source) {\n    if (Object.prototype.hasOwnProperty.call(source, key)) {\n      if (typeof source[key] === 'object' && source[key] !== null) {\n        // Recursively merge if both source and target values are objects\n        result[key] = merge(result[key], source[key]);\n      } else {\n        // Directly assign value from the source\n        result[key] = source[key];\n      }\n    }\n  }\n\n  return result;\n}\n\n\nexport function debounce(callback, delay) {\n  let timer;\n  return function (...args) {\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      callback.apply(this, args); // Preserve the correct `this` context\n    }, delay);\n  };\n}","import { useEffect, useRef, useState } from \"react\";\n\nimport posx from \"../../../../../public/images/envmaps/fishermans_bastion/posx.jpg\";\nimport posy from \"../../../../../public/images/envmaps/fishermans_bastion/posy.jpg\";\nimport posz from \"../../../../../public/images/envmaps/fishermans_bastion/posz.jpg\";\nimport negx from \"../../../../../public/images/envmaps/fishermans_bastion/negx.jpg\";\nimport negy from \"../../../../../public/images/envmaps/fishermans_bastion/negy.jpg\";\nimport negz from \"../../../../../public/images/envmaps/fishermans_bastion/negz.jpg\";\nimport { hexToRGB } from \"../../../../../../wp-utils/v1\";\nimport SliderController from \"./SliderControllder\";\nimport ModelPagination from \"./ModelPagination\";\nimport { rgbaStringToFactor } from \"../../../../utils\";\n\nfunction copyObjectUsingJSON(originalObject) {\n  return JSON.parse(JSON.stringify(originalObject));\n}\n\nconst Button = (props) => {\n  return <button {...props}></button>;\n};\n\nconst Basic3DViewer = (props) => {\n  const { attributes, currentItem, setCurrentItem, modelSrc, setAttributes, __ } = props;\n  const { styles, models, multiple, O3DVSettings } = attributes;\n  const { isNavigation, isPagination, camera, mouseControl, zoom = true, showEdge = false, edgeColor } = O3DVSettings;\n\n  const [viewerLoaded, setViewerLoaded] = useState(false);\n\n  const parentDiv = useRef(null);\n  const viewerRef = useRef(null);\n  const instanceRef = useRef(null);\n\n  useEffect(() => {\n    if (modelSrc) {\n      viewerRef.current?.Destroy();\n      viewerRef.current?.canvas?.remove();\n      viewerRef.current = null;\n      if (viewerRef.current === null) {\n        // OV.SetExternalLibLocation(\"../libs\");\n\n        const defaultCamera = camera && !multiple ? { camera: new OV.Camera(new OV.Coord3D(...Object.values(camera.eye)), new OV.Coord3D(...Object.values(camera.center)), new OV.Coord3D(...Object.values(camera.up)), 45.0) } : {};\n\n        instanceRef.current = new OV.EmbeddedViewer(parentDiv.current, {\n          ...defaultCamera,\n          backgroundColor: new OV.RGBAColor(255, 255, 255, 255),\n          edgeSettings: new OV.EdgeSettings(showEdge, new OV.RGBColor(0, 0, 0), 1),\n          environmentSettings: new OV.EnvironmentSettings([posx, posy, posz, negx, negy, negz], false),\n        });\n\n        const models = [modelSrc];\n        instanceRef.current.LoadModelFromUrlList(models);\n        viewerRef.current = instanceRef.current;\n        window.VR = instanceRef.current;\n\n        // handle zoom functionality\n        instanceRef.current.viewer.navigation.SetZoomStatus(zoom);\n      } else {\n        viewerRef.current.LoadModelFromUrlList([modelSrc]);\n        const Coord3D = new OV.Coord3D(0.0, 0.0, 0.0);\n        viewerRef.current.viewer.SetCamera(new OV.Camera(new OV.Coord3D(0.0, 0.0, 1.0), Coord3D, new OV.Coord3D(0.0, 1.0, 0.0), 45.0));\n      }\n    }\n\n    return () => {\n      if (viewerRef.current !== null && parentDiv.current !== null && viewerLoaded) {\n        delete viewerRef.current.model;\n        viewerRef.current.viewer.renderer.resetState();\n        viewerRef.current.viewer.Clear();\n        if (viewerRef.current.viewer) {\n          delete viewerRef.current.viewer;\n        }\n        const gl = viewerRef.current.canvas.getContext(\"webgl2\");\n        gl.getExtension(\"WEBGL_lose_context\").loseContext();\n        const tempClone = viewerRef.current.canvas.cloneNode(true);\n        viewerRef.current.canvas.parentNode.replaceChild(tempClone, viewerRef.current.canvas);\n        parentDiv.current?.removeChild(parentDiv.current.children[0]);\n        viewerRef.current.canvas?.parentNode?.removeChild(viewerRef.current.canvas);\n        viewerRef.current.canvas.remove();\n        viewerRef.current = null;\n        setViewerLoaded(false);\n      }\n    };\n  }, [modelSrc]);\n\n  useEffect(() => {\n    if (hexToRGB(styles.bgColor)) {\n      viewerRef.current?.viewer?.SetBackgroundColor(hexToRGB(styles.bgColor));\n    }\n    setTimeout(() => {\n      viewerRef.current?.viewer?.Resize(parentDiv.current.offsetWidth, parentDiv.current.offsetHeight);\n    }, 10);\n    viewerRef.current.viewer.Render();\n    window.viewer = viewerRef.current;\n  }, [styles, modelSrc]);\n\n  // resize if window is resized\n  useEffect(() => {\n    window.addEventListener(\"resize\", () => {\n      viewerRef.current?.viewer?.Resize(parentDiv.current?.offsetWidth, parentDiv.current?.offsetHeight);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (instanceRef.current) {\n      instanceRef.current.viewer.navigation.SetZoomStatus(zoom);\n      const [r = 0, g = 0, b = 0] = rgbaStringToFactor(edgeColor) || [];\n      instanceRef.current.viewer.SetEdgeSettings(new OV.EdgeSettings(showEdge, new OV.RGBColor(r * 255, g * 255, b * 255), 0));\n    }\n  }, [zoom, showEdge, edgeColor]);\n\n  return (\n    <>\n      <div\n        ref={parentDiv}\n        role={\"img\"}\n        aria-label=\"Canvas showing the model in the 3D Viewer\"\n        className={`${mouseControl ? \"\" : \"DMC\"} ${viewerRef.current?.modelLoader?.inProgress} relative flex  flex-col items-center justify-center p-2 h-72 w-72 border-2 border-black rounded-sm online_3d_viewer`}\n      // style={{ width: styles.width.desktop || styles.width, height: styles.height.desktop || styles.height }}\n      >\n        <ModelPagination attributes={attributes} setCurrentItem={setCurrentItem} currentItem={currentItem} isPagination={isPagination} />\n        {multiple && isNavigation && models.length > 1 && <SliderController currentItem={currentItem} setCurrentItem={setCurrentItem} models={models} />}\n        {setAttributes && !multiple && (\n          <div className=\"setDefaultViewContainer\">\n            <Button\n              variant=\"primary\"\n              className=\"setDefaultView button button-primary\"\n              onClick={() => {\n                if (viewerRef.current) {\n                  const camera = copyObjectUsingJSON(viewerRef.current?.viewer?.GetCamera());\n                  setAttributes({ O3DVSettings: { ...O3DVSettings, camera } });\n                }\n              }}\n            >\n              {camera ? __(\"Reset Default View\", \"model-viewer\") : __(\"Set Default View\", \"model-viewer\")}\n            </Button>\n            {camera && (\n              <>\n                <Button\n                  variant=\"primary\"\n                  className=\"setDefaultView button button-primary\"\n                  onClick={() => {\n                    viewerRef.current?.viewer.SetCamera(new OV.Camera(new OV.Coord3D(...Object.values(camera.eye)), new OV.Coord3D(...Object.values(camera.center)), new OV.Coord3D(...Object.values(camera.up)), 45.0));\n                  }}\n                >\n                  {__(\"See Default View\", \"model-viewer\")}\n                </Button>\n                <Button variant=\"primary\" className=\"setDefaultView button button-primary\" onClick={() => setAttributes({ O3DVSettings: { ...O3DVSettings, camera: null } })}>\n                  {__(\"Remove Default View\", \"model-viewer\")}\n                </Button>\n              </>\n            )}\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Basic3DViewer;\n","import { useEffect, useState, useRef, useCallback, useMemo } from \"react\";\n\nimport Style from \"./Style\";\nimport FullscreenOpen from \"../../../../components/Icons/fullscreenOpen\";\nimport Close from \"../../../../components/Icons/Close\";\nimport modelRenderer from \"../../../../utils/modelRenderer\";\nimport SliderController from \"./SliderControllder\";\nimport Basic3DViewer from \"./Basic3DViewer\";\nimport ModelReader from \"../../../../utils/ModelReader\";\nimport { handleWoocommerceVariantUpdateDefault, handleWoocommerceVariantUpdateForSwatchly } from \"../../../../utils/woocommerce\";\n\nconst Viewer = ({ attributes, __, setAttributes, viewerRef, setModelReader }) => {\n  const [isValid, setIsValid] = useState(false);\n  const {\n    loadingPercentage = false,\n    uniqueId,\n    model,\n    models,\n    fullscreen,\n    exposure,\n    variant,\n    multiple,\n    additional,\n    selectedAnimation,\n    animation,\n    autoRotate,\n    rotateDelay,\n    autoplay,\n    rotateAlongX,\n    align,\n    woo,\n    rotationPerSecond,\n    preload,\n    isPagination,\n    isNavigation,\n    zoom,\n    currentViewer = \"modelViewer\",\n    O3DVSettings = {},\n    loading,\n    texture = {},\n    environmentImage: oldEnvironmentImage,\n    zoomLevel = 1,\n    toneMapping,\n    appliedTextures,\n  } = attributes;\n\n  const { isFullscreen } = O3DVSettings;\n\n  const [currentItem, setCurrentItem] = useState(0);\n  const [modelSrc, setModelSrc] = useState(multiple ? models[currentItem]?.modelUrl : model?.modelUrl);\n  // const [currentModel, setCurrentModel] = useState(multiple ? models[currentItem] : model);\n\n  const currentModel = useMemo(() => (multiple ? models[currentItem] : model), [models[currentItem], model]);\n  const [selectedVariants, setSelectedVariants] = useState(null);\n\n  const variantRef = useRef();\n  const animationRef = useRef();\n\n  useEffect(() => {\n    setModelSrc(multiple ? models[currentItem]?.modelUrl : model?.modelUrl);\n  }, [currentItem, multiple, models, model]);\n\n  useEffect(() => {\n    try {\n      new URL(modelSrc);\n      setIsValid(true);\n    } catch (error) {\n      setIsValid(false);\n    }\n\n    setTimeout(() => {\n      modelRenderer({ animation, variant, wrapper: viewerRef.current?.parentElement });\n    }, 10);\n  }, [uniqueId, model, models, multiple, modelSrc]);\n\n  useEffect(() => {\n    if (!autoplay) {\n      viewerRef.current?.pause();\n    }\n  }, [autoplay]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (viewerRef.current && animationRef.current) {\n        viewerRef.current.animationName = selectedAnimation;\n        const selectElement = animationRef.current.querySelector(\"select\");\n        selectElement.value = selectedAnimation;\n      }\n    }, 10);\n  }, [selectedAnimation]);\n\n  useEffect(() => {\n    if (variantRef.current) {\n      if (variant) {\n        variantRef.current.style.display = \"inline-block\";\n      } else {\n        variantRef.current.style.display = \"none\";\n      }\n    }\n  }, [variant]);\n\n  useEffect(() => {\n    if (animationRef.current) {\n      if (animation && viewerRef.current.loaded) {\n        animationRef.current.style.display = \"inline-block\";\n      } else {\n        animationRef.current.style.display = \"none\";\n      }\n    }\n  }, [animation, animationRef]);\n\n  useEffect(() => {\n    if (viewerRef.current?.turntableRotation) {\n      viewerRef.current.resetTurntableRotation();\n    }\n  }, [rotateAlongX]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      const { mouseControl, autoplay, shadow, rotate, rotateAlongX, rotateAlongY, loading } = attributes;\n      const skybox = attributes.useEnvironmentAsSkybox ? environmentImage : skyboxImage || null;\n\n      if (viewerRef.current) {\n        mouseControl ? viewerRef.current.setAttribute(\"camera-controls\", \"\") : viewerRef.current.removeAttribute(\"camera-controls\");\n        autoplay ? viewerRef.current.setAttribute(\"autoplay\", \"\") : viewerRef.current.removeAttribute(\"autoplay\");\n        shadow ? viewerRef.current.setAttribute(\"shadow-intensity\", \"1\") : viewerRef.current.removeAttribute(\"shadow-intensity\");\n        shadow ? viewerRef.current.setAttribute(\"shadow-softness\", \"1\") : viewerRef.current.removeAttribute(\"shadow-softness\");\n        loading ? viewerRef.current.setAttribute(\"loading\", loading) : viewerRef.current.removeAttribute(\"loading\");\n\n        if (skybox) {\n          viewerRef.current.setAttribute(\"skybox-image\", skybox);\n        } else {\n          viewerRef.current.removeAttribute(\"skybox-image\");\n        }\n\n        if (autoRotate) {\n          viewerRef.current.setAttribute(\"auto-rotate\", \"\");\n          viewerRef.current.setAttribute(\"auto-rotate-delay\", rotateDelay || 3000);\n          viewerRef.current.setAttribute(\"rotation-per-second\", rotationPerSecond + \"deg\");\n        } else {\n          viewerRef.current.removeAttribute(\"auto-rotate\");\n        }\n\n        rotate ? viewerRef.current.setAttribute(\"camera-orbit\", `${rotateAlongX}deg ${rotateAlongY}deg 105%`) : viewerRef.current.removeAttribute(\"camera-orbit\");\n        viewerRef.current.setAttribute(\"reveal\", preload);\n        viewerRef.current.dataset.animation = selectedAnimation;\n        viewerRef.current.setAttribute(\"exposure\", currentModel?.exposure || exposure);\n\n        if (!zoom) {\n          viewerRef.current.setAttribute(\"disable-zoom\", \"\");\n        } else {\n          viewerRef.current.removeAttribute(\"disable-zoom\");\n        }\n\n        viewerRef.current?.addEventListener(\"load\", function () {\n          // applyTexture();\n          viewerRef.current.setAttribute(\"scale\", `${zoomLevel} ${zoomLevel} ${zoomLevel}`);\n        });\n\n        if (viewerRef.current?.loaded) {\n          viewerRef.current.setAttribute(\"scale\", `${zoomLevel} ${zoomLevel} ${zoomLevel}`);\n        }\n      }\n\n      setTimeout(() => {\n        rotate ? viewerRef.current?.setAttribute(\"camera-orbit\", `${rotateAlongX}deg ${rotateAlongY}deg 105%`) : viewerRef.current?.removeAttribute(\"camera-orbit\");\n      }, 500);\n    }, 10);\n  }, [uniqueId, attributes]);\n\n  useEffect(() => {\n    const runFistAttempt = async () => {\n      const modelReader = new ModelReader(viewerRef.current);\n\n      setModelReader(modelReader);\n      modelReader.onReady(() => {\n        modelReader.applyTexture(appliedTextures);\n      });\n      window.appliedTextures = appliedTextures;\n    };\n\n    // viewerRef.current value is null if use runFirstAttempt directly without setTimeout\n    setTimeout(() => {\n      if (viewerRef?.current?.loaded) {\n        runFistAttempt();\n      } else {\n        viewerRef?.current?.addEventListener(\"load\", runFistAttempt);\n      }\n    }, 20);\n\n    return () => {\n      viewerRef.current?.removeEventListener(\"load\", runFistAttempt);\n    };\n  }, [model.modelUrl, currentViewer]);\n\n  useEffect(() => {\n    if (woo) {\n      // woocommerce default template\n      handleWoocommerceVariantUpdateDefault(setSelectedVariants);\n\n\n      // change model when change variation | Swatchly – WooCommerce Variation Swatches\n      if (container.current) {\n        const slickItem = document.querySelector(\".wl-single-slider:not(.slick-cloned)\");\n        if (slickItem && !slickItem.querySelector(\".modelViewerBlock\")) {\n          slickItem.append(container.current.parentElement);\n          container.current.parentElement.style.display = \"none\";\n          setTimeout(() => {\n            // container.current.style.height = `calc(${getComputedStyle(container.current).height} - 100px)`;\n          }, 100);\n        }\n        // swatchly plugin\n        handleWoocommerceVariantUpdateForSwatchly(setSelectedVariants)\n      }\n\n      setTimeout(() => {\n        const targetElement = document.querySelector(\".select2-selection__rendered\");\n        // Create a new MutationObserver\n        const observer = new MutationObserver(function (mutationsList) {\n          // This callback function will be called when the innerText changes\n          for (const mutation of mutationsList) {\n            if (mutation.type === \"childList\" && mutation.target === targetElement) {\n              const modelItem = models.find((item) => item.product_variant === targetElement.innerText) || models.find((item) => item.product_variant === \"all\") || models?.[0];\n              setModelSrc(modelItem.modelUrl);\n\n            }\n          }\n        });\n\n        // Configure and start observing the target element\n        if (targetElement) {\n          const config = { childList: true, subtree: true };\n          observer.observe(targetElement, config);\n        }\n      }, 1000);\n    }\n\n    return () => {\n      // variantElement?.removeEventListener(\"change\", onVariationChange);\n    }\n  }, [woo]);\n\n  useEffect(() => {\n    if (currentModel.arEnabled && viewerRef.current) {\n      setTimeout(() => {\n        const { arEnabled, arPlacement = \"floor\", arMode = \"quick-look\", modelISOSrc } = currentModel || {};\n        if (arEnabled) {\n          viewerRef.current.setAttribute(\"ar\", \"\");\n          viewerRef.current.setAttribute(\"ar-placement\", arPlacement);\n          viewerRef.current.setAttribute(\"ar-mode\", arMode);\n          viewerRef.current.setAttribute(\"ios-src\", modelISOSrc);\n          // viewerRef.current.setAttribute(\"ar-scale\", scale);\n          viewerRef.current.removeAttribute(\"ar-status\");\n        } else {\n          viewerRef.current.removeAttribute(\"ar\");\n          viewerRef.current.removeAttribute(\"ar-placement\");\n          viewerRef.current.removeAttribute(\"ar-mode\");\n          // viewerRef.current.removeAttribute(\"ar-scale\");\n        }\n      }, 100);\n    }\n  }, [currentModel]);\n\n  const modelPoster = currentModel?.poster;\n  const skyboxImage = currentModel.skyboxImage;\n  const environmentImage = currentModel.environmentImage || oldEnvironmentImage;\n\n  // useEffect(() => {}, [model]);\n\n  const container = useRef();\n\n  // update model when change variation\n  useEffect(() => {\n\n    if (typeof selectedVariants !== \"object\" || !selectedVariants) return;\n    if (Object.values(selectedVariants).every(v => v !== null && v !== '' && v !== undefined)) {\n      const modelItem = models.find((item) => {\n        const firstVariant = Object.keys(selectedVariants)[0];\n        // match one variant if it's a old version\n        if (!item[firstVariant]) {\n          return [selectedVariants[firstVariant], 'all'].includes(item.product_variant);\n        } else {\n\n          // Match all variant keys and values\n          return Object.entries(selectedVariants).every(\n            ([key, value]) => {\n              return [value, 'all'].includes(item[key]);\n            }\n          );\n\n        }\n\n      }) || models?.[1];\n\n      setModelSrc(modelItem?.modelUrl);\n    }\n\n  }, [selectedVariants])\n\n  if (!modelSrc) {\n    return <></>;\n  }\n\n  return (\n    <div ref={container} id={`${uniqueId}`} className={`modelViewerBlock b3dviewer align${align} ${woo ? \"woocommerce\" : \"\"} ${isPagination && multiple ? \"modelPagination\" : \"\"}`}>\n      <div id={additional?.ID || \"additional_id\"} className={`${additional?.Class} b3dviewer-wrapper bp_model_parent`}>\n        <Style attributes={attributes} />\n\n        {modelSrc && isValid && (\n          <>\n            {/* {[\"glb\", \"gltf\"].includes(modelSrc?.split(\".\")?.pop()) ? ( */}\n            {currentViewer === \"modelViewer\" ? (\n              <model-viewer\n                // ar\n                loading={loading ? loading : \"auto\"}\n                camera-controls\n                ref={viewerRef}\n                data-js-focus-visible\n                data-decoder={multiple ? models[0]?.decoder : model?.decoder}\n                poster={modelPoster?.replace(/https?:/, window.location.protocol)}\n                src={modelSrc?.replace(/https?:/, window.location.protocol)}\n                exposure={currentModel?.exposure || exposure}\n                alt=\"A 3D model\"\n                scale={`1 1 1`}\n                environment-image={environmentImage}\n                channel={texture.type}\n                texture={texture.image}\n                skybox-image={skyboxImage}\n                tone-mapping={toneMapping}\n                ar={currentModel.arEnabled}\n                ar-placement={currentModel.arPlacement || 'floor'}\n                ar-modes={\"webxr scene-viewer quick-look\"}\n                ar-scale={currentModel.arScale || 'auto'}\n              >\n                {/* <button slot=\"ar-button\" style={{ backgroundColor: \"white\", borderRadius: \"4px\", border: \"none\", position: \"absolute\", top: \"16px\", right: \"16px\" }} id=\"ar-buttdon\">\n                  View in your space\n                </button> */}\n                {/* <button slot=\"ar-button\" className=\"activate_ar\">\n                  Activate AR\n                </button> */}\n                {/* <button slot=\"ar-button\" style=\"background-color: white; border-radius: 4px; border: none; position: absolute; top: 16px; right: 16px; \">\n                  👋 Activate AR\n                </button> */}\n                <button type=\"button\" slot=\"poster\" id=\"default-poster\" aria-label=\"A 3D model\" style={modelPoster ? { backgroundImage: ` url(\"${modelPoster?.replace(/https?:/, window.location.protocol)}\")` } : {}}></button>\n\n                {/* {loadingPercentage && viewerRef.current && !viewerRef.current?.loaded && ( */}\n                {loadingPercentage &&\n                  !viewerRef.current?.loaded && ( // working fine on frontend with this condition\n                    <div className=\"percentageWrapper\" slot=\"progress-bar\">\n                      <div className=\"overlay\"></div>\n                      <span className=\"percentage\">0%</span>\n                    </div>\n                  )}\n                <div className=\"variantWrapper select\" ref={variantRef}>\n                  {__(\"Variant\", \"model-viewer\")} <select id=\"variant\"></select>\n                </div>\n                <div className=\"animationWrapper select\" ref={animationRef}>\n                  {__(\"Animations\", \"model-viewer\")} <select id=\"animations\"></select>\n                </div>\n                {multiple && !woo && isPagination && (\n                  <div className=\"slider\">\n                    <div className=\"slides\">\n                      {models.map((model, index) => (\n                        <button key={index} className={`slide ${index === 0 ? \"selected\" : \"\"} ${model.poster ? \"\" : \"slide-number\"}`} data-source={model?.modelUrl} data-poster={model?.poster} onClick={() => setCurrentItem(index)}>\n                          {model.poster ? <img src={model?.poster} /> : <span>{index + 1}</span>}\n                        </button>\n                      ))}\n                    </div>\n                  </div>\n                )}\n\n                {multiple && isNavigation && models.length > 1 && <SliderController currentItem={currentItem} setCurrentItem={setCurrentItem} models={models} />}\n              </model-viewer>\n            ) : (\n              <>\n                {/* {__(\"This format does not support this plugin\", \"model-viewer\")} */}\n                <Basic3DViewer __={__} setAttributes={setAttributes} modelSrc={modelSrc} currentItem={currentItem} setCurrentItem={setCurrentItem} model={modelSrc} attributes={attributes} />\n              </>\n            )}\n          </>\n        )}\n\n        {modelSrc === \"\" && models[currentItem].poster && (\n          <>\n            {woo && models.length > 1 && <SliderController currentItem={currentItem} setCurrentItem={setCurrentItem} models={models} />}\n            <img src={models[currentItem].poster} />\n          </>\n        )}\n        {/* Thumbnails for woocommerce product */}\n        {((fullscreen && currentViewer === \"modelViewer\") || (currentViewer === \"O3DViewer\" && isFullscreen)) && (\n          <>\n            <FullscreenOpen element={container.current?.querySelector(\".bp_model_parent\")} />\n            <Close element={container.current?.querySelector(\".bp_model_parent\")} />\n          </>\n        )}\n      </div>\n      {woo && isPagination && (\n        <div className=\"modelThumbs\">\n          {models.map((item, index) => {\n            return <>{item.poster && <img className={`thumbsItem ${index === currentItem ? \"selected\" : \"\"}`} onClick={() => setCurrentItem(index)} src={item.poster} />}</>;\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Viewer;\n","/**\n * \n * @param {function} setSelectedVariants // state Setter\n * @returns \n */\nexport const handleWoocommerceVariantUpdateForSwatchly = (setSelectedVariants) => {\n    const parentEl = document.querySelector('table.variations');\n    if (!parentEl) return;\n    const labels = parentEl.querySelectorAll('.label label');\n    const variations = {}\n    labels?.forEach(label => {\n        variations[`attribute_${label.getAttribute('for')}`] = \"\";\n    });\n    setSelectedVariants(variations);\n\n    parentEl.querySelectorAll('tr')?.forEach(row => {\n        const attr = row?.querySelector('.label label')?.getAttribute('for');\n        row.querySelectorAll('.swatchly-swatch')?.forEach(el => {\n            el.addEventListener('click', () => {\n                variations[`attribute_${attr}`] = el.getAttribute('data-attr_value');\n                setSelectedVariants((oldData) => {\n                    return { ...oldData, [`attribute_${attr}`]: el.getAttribute('data-attr_value') }\n                });\n            })\n        })\n    });\n}\n\n\nexport const handleWoocommerceVariantUpdateDefault = (setSelectedVariants) => {\n    document.querySelectorAll(\".variations_form .variations select\")?.forEach((select) => {\n        const variations = {};\n        variations[select.name] = select.value;\n        select.addEventListener(\"change\", function (e) {\n            setSelectedVariants((oldData) => ({\n                ...oldData,\n                [select.name]: select.value,\n            }));\n        });\n        setSelectedVariants(variations);\n    })\n\n}","// import \"./style.scss\";\n// import \"./scss/themes/themes.scss\";\n// import \"./scss/themes/common.scss\";\n// import \"./index.js\";\n\nimport { findParentUntilMultipleChildren, isImageSource, restoreOriginalImageSrc } from \"../utils\";\nimport getClickAbleDom from \"../utils/getClickAbleDom\";\n\n\n\n// Full Screen\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const modelWrapper = document.querySelectorAll(\".modelViewerBlock\");\n\n  setTimeout(() => {\n    Object.values(modelWrapper).map((wrapper) => {\n      const models = wrapper.querySelectorAll(\"model-viewer\") || wrapper.querySelectorAll(\".online_3d_viewer\");\n      const progressElement = wrapper.querySelector(\".progress\");\n\n      models.forEach((model) => {\n        const src = new URL(model?.src || model?.getAttribute(\"src\") || model?.getAttribute(\"model\"));\n        if (model.tagName === \"DIV\") {\n          console.log(\"Advanced viewer\");\n        } else {\n          // add/remove ssl from url depends on website\n          if (src?.protocol !== location?.protocol) {\n            model?.setAttribute(\"src\", src.href.replace(src?.protocol, location?.protocol));\n          }\n\n          if (progressElement) {\n            model?.addEventListener(\"progress\", (e) => {\n              progressElement.innerHTML = parseInt(e.detail.totalProgress * 100) + \"%\";\n            });\n            model?.addEventListener(\"load\", () => {\n              setTimeout(() => {\n                progressElement.style.display = \"none\";\n              }, 500);\n            });\n          }\n\n          model.dataset.items = \"\";\n\n          // set model width for goya theme\n          const productModalContainer = document.querySelector(\".product-modal-wrap\");\n          if (\n            productModalContainer &&\n            !productModalContainer?.nextElementSibling?.classList?.contains(\"entry-summary\") &&\n            !productModalContainer?.nextElementSibling?.classList?.contains(\"mkd-single-product-summary\")\n          ) {\n            // productModalContainer.style.width = \"100%\";\n            productModalContainer.classList.add(\"model-full-width\");\n            const information = document.querySelector(\".showcase-inner .product-information\");\n            if (information) {\n              const model = productModalContainer.querySelector(\"model-viewer\");\n              if (model) {\n                model.style.height = information.offsetHeight + \"px\";\n              }\n            }\n          }\n        }\n      });\n    });\n  }, 1000);\n\n  document.querySelectorAll(\".bp3dv-model-main\")?.forEach((model) => {\n    let selector = model.dataset.selector;\n\n    if (!selector || selector === \"\") {\n      return false;\n    }\n\n    let clickableItem = getClickAbleDom(selector)\n\n    if (clickableItem) {\n      clickableItem?.addEventListener(\"click\", (e) => {\n        e.preventDefault();\n        model.classList.add(\"model-open\");\n        window.dispatchEvent(new Event('resize'))\n      });\n\n      clickableItem.style.cursor = \"pointer\";\n\n      model.querySelector(\".close-btn\").addEventListener(\"click\", () => model.classList.remove(\"model-open\"));\n      model.querySelector(\".bg-overlay\").addEventListener(\"click\", () => model.classList.remove(\"model-open\"));\n    } else {\n      console.warn(\"clickable item is not found\", selector);\n    }\n  });\n});\n\n\n\nif (window.jQuery) {\n  jQuery(document).ready(function ($) {\n    $(\".bp3dmodel-carousel\")?.[0]?.slick({\n      slidesToShow: 1,\n      slidesToScroll: 1,\n      arrows: true,\n    });\n  });\n}\n","import { findParentUntilMultipleChildren, isImageSource, restoreOriginalImageSrc } from \"../utils\";\n\nexport default function getClickAbleDom(selector) {\n    if (!selector) return null;\n    let clickableItem = document.querySelector(isImageSource(selector) ? `img[src=\"${selector}\"]` : selector.includes(\"#\") || selector.includes(\".\") ? selector : `.${selector}`);\n    if (isImageSource(selector)) {\n        if (!clickableItem) {\n            clickableItem = document.querySelector(`img[data-src=\"${selector}\"]`);\n        }\n\n        if (!clickableItem) {\n            clickableItem = document.querySelector(`img[data-src=\"${restoreOriginalImageSrc(selector)}\"]`);\n        }\n\n        if (!clickableItem) {\n            clickableItem = document.querySelector(`img[src=\"${restoreOriginalImageSrc(selector)}\"]`);\n        }\n\n        if (!clickableItem) {\n            clickableItem = document.querySelector(`a[href=\"${restoreOriginalImageSrc(selector)}\"]`);\n        }\n    }\n\n    if (clickableItem) {\n        clickableItem = findParentUntilMultipleChildren(clickableItem);\n        if (clickableItem?.innerHTML?.includes(\"<a\")) {\n            clickableItem.classList.add(\"bp3dv_a_popup_opener\");\n        }\n\n        if (clickableItem?.innerHTML?.includes(\"<img\") && window.location.host === \"reintest.be\") {\n            clickableItem.classList.add(\"bp3dv_play_icon\");\n        }\n    }\n    return clickableItem;\n}","// eslint-disable-next-line react/no-deprecated\nimport { render } from \"react-dom\";\nimport { jsonParse } from \"./../../../wp-utils/v1\";\nimport Viewer from \"./../blocks/3d-viewer/Components/Common/Viewer\";\nimport { useState } from \"react\";\nimport modelRenderer from \"../utils/modelRenderer.js\";\n\nimport \"./product.js\";\nimport { findParentUntilMultipleChildren, isImageSource, restoreOriginalImageSrc } from \"../utils\";\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const models = document.querySelectorAll(\".b3dviewer-wrapper:not(.elementor)\");\n\n  Object.values(models).map((wrapper) => {\n    modelRenderer({ animation: true, variant: true, wrapper });\n  });\n\n  /**\n   * Modal/Popup for woocommerce product images\n   * open 3D model popup when click on the product image\n   */\n  document.querySelectorAll(\".bp3dv-model-main\")?.forEach((model) => {\n    let selector = model.dataset.selector;\n\n    if (!selector || selector === \"\") {\n      return false;\n    }\n    let clickableItem = document.querySelector(isImageSource(selector) ? `img[src=\"${selector}\"]` : selector.includes(\"#\") || selector.includes(\".\") ? selector : `.${selector}`);\n\n    if (isImageSource(selector)) {\n      if (!clickableItem) {\n        clickableItem = document.querySelector(`img[data-src=\"${selector}\"]`);\n      }\n\n      if (!clickableItem) {\n        clickableItem = document.querySelector(`img[data-src=\"${restoreOriginalImageSrc(selector)}\"]`);\n      }\n\n      if (!clickableItem) {\n        clickableItem = document.querySelector(`img[src=\"${restoreOriginalImageSrc(selector)}\"]`);\n      }\n\n      if (!clickableItem) {\n        clickableItem = document.querySelector(`a[href=\"${restoreOriginalImageSrc(selector)}\"]`);\n      }\n    }\n\n    if (clickableItem) {\n      clickableItem = findParentUntilMultipleChildren(clickableItem);\n      if (clickableItem?.innerHTML?.includes(\"<a\")) {\n        clickableItem.classList.add(\"bp3dv_a_popup_opener\");\n      }\n\n      if (clickableItem?.innerHTML?.includes(\"<img\") && window.location.host === \"reintest.be\") {\n        clickableItem.classList.add(\"bp3dv_play_icon\");\n      }\n\n      clickableItem?.addEventListener(\"click\", (e) => {\n        e.preventDefault();\n        model.classList.add(\"model-open\");\n      });\n\n      clickableItem.style.cursor = \"pointer\";\n\n      model.querySelector(\".close-btn\").addEventListener(\"click\", () => model.classList.remove(\"model-open\"));\n      model.querySelector(\".bg-overlay\").addEventListener(\"click\", () => model.classList.remove(\"model-open\"));\n    } else {\n      console.warn(\"clickable item is not found\", selector);\n    }\n  });\n});\n\nconst FrontEnd = ({ attributes }) => {\n  const [modelReader, setModelReader] = useState(null);\n  function __(text, textdomain = \"\") {\n    return text;\n  }\n\n  if (attributes) {\n    return <Viewer attributes={attributes} __={__} setModelReader={setModelReader} modelReader={modelReader} />;\n  }\n};\n\n/**\n * elementor start\n */\nwindow.addEventListener(\"elementor/frontend/init\", function () {\n  elementorFrontend.hooks.addAction(\"frontend/element_ready/3dModelViewer.default\", function (scope, $) {\n    const blocks = scope[0]?.querySelectorAll(\".modelViewerBlock\");\n    blocks?.forEach((dom) => {\n      const dataset = { ...dom.dataset } || {};\n      setTimeout(() => {\n        Object.keys(dom.dataset).map((key) => delete dom.dataset[key]);\n      }, 10);\n\n      const attributes = jsonParse(dataset.attributes);\n\n      if (attributes) {\n        const selector = dataset.selector;\n        if (selector && document.querySelector(selector)) {\n          dom = document.querySelector(selector);\n          dom.setAttribute(\"style\", `width:${dom.offsetWidth}px;height:350px`);\n        }\n        if (!attributes?.currentViewer || attributes.currentViewer === \"modelViewer\") {\n          dom.setAttribute(\"data-rendered\", \"true\");\n          render(<FrontEnd attributes={attributes} />, dom);\n          const Src = document.getElementById(\"bp3d-model-viewer-js\");\n          if (!Src) {\n            const script = document.createElement(\"script\");\n            script.type = \"module\";\n            script.id = \"bp3d-model-viewer-js\";\n            script.src = window[\"bp3dBlock\"]?.modelViewerSrc;\n            document.head.appendChild(script);\n          }\n        }\n\n        if (attributes.currentViewer === \"O3DViewer\") {\n          if (typeof OV == \"undefined\") {\n            const Src = document.getElementById(\"bp3d-o3dviewer-js\");\n            if (!Src) {\n              const script = document.createElement(\"script\");\n              script.id = \"bp3d-o3dviewer-js\";\n              script.src = window[\"bp3dBlock\"]?.o3dviewerSrc;\n              document.head.appendChild(script);\n              script.addEventListener(\"load\", () => {\n                render(<FrontEnd attributes={attributes} />, dom);\n              });\n            } else {\n              Src.addEventListener(\"load\", () => {\n                render(<FrontEnd attributes={attributes} />, dom);\n              });\n            }\n          } else {\n            render(<FrontEnd attributes={attributes} />, dom);\n          }\n        }\n      }\n    });\n  });\n});\n\nwindow.modelRenderer = modelRenderer;","const jsonParse = (json) => {\r\n  let parsedJson = null;\r\n  try {\r\n    parsedJson = JSON.parse(json);\r\n  } catch (error) {\r\n    console.warn(error.message);\r\n  }\r\n  return parsedJson;\r\n};\r\n\r\nexport default jsonParse;\r\n"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","hex","type","r","b","a","includes","match","map","Number","result","exec","parseInt","Style","attributes","styles","uniqueId","woo","progressBar","additional","progressBarColor","thumbSize","CSS","setCSS","useState","useEffect","width","desktop","height","bgColor","bgImage","tablet","mobile","replaceAll","createElement","FullscreenOpen","element","onClick","handleClick","requestFullscreen","classList","add","id","viewBox","xmlns","fill","className","fillRule","d","Close","exitFullscreen","webkitExitFullscreen","msExitFullscreen","remove","stroke","strokeWidth","createSelector","options","selected","show","parentElement","style","display","innerHTML","href","name","option","value","textContent","appendChild","modelRenderer","params","animation","variant","wrapper","modelViewer","querySelector","source","URL","protocol","error","console","warn","message","selectedAnimation","dataset","select","animations","percentageWrapper","percentageElement","reveal","loaded","addEventListener","availableVariants","availableAnimations","animationName","setTimeout","interval","setInterval","clearInterval","event","detail","totalProgress","variantName","target","slides","querySelectorAll","slide","preventDefault","poster","forEach","ev","SliderController","currentItem","setCurrentItem","models","Fragment","ModelPagination","isPagination","multiple","model","index","key","modelUrl","constructor","copy","thumbnailsById","Map","thumbnail_size","textures","texturesArray","textureChannels","defaultMaterialData","initialized","sizes","readyCallbacks","isReady","onLoad","bind","initialize","callback","onReady","push","getDefaultMaterialData","createThumbnails","pagenow","loadModelWithoutAppending","Date","now","materials","getTextureId","gltfImage","_gltfImage$uri","uri","bufferView","toString","getTextures","Object","keys","getBlobFileSize","blobUrl","response","fetch","ok","blob","size","pushThumbnail","textureInfo","texture","has","objectUrl","createThumbnail","set","material","ensureLoaded","pbrMetallicRoughness","normalTexture","emissiveTexture","occlusionTexture","baseColorTexture","metallicRoughnessTexture","getAllMaterialData","materialsData","async","materialName","Math","random","substr","baseColor","factor","baseColorFactor","metallicRoughness","metallicFactor","roughnessFactor","normal","emissive","emissiveFactor","occlusion","updateMaterialTextureAndFactor","channel","textureUri","textureName","setBaseColorFactor","rgbaStringToFactor","setMetallicFactor","setRoughnessFactor","setEmissiveFactor","setTexture","log","createTexture","getMaterialByName","applyTexture","appliedTextures","modelReader","url","textureImage","getTextureByName","entries","matName","channels","ch","shakeMaterialFactor","duration","originalFactor","slice","getTextureURIByName","getTexturesArray","getTextureChannels","label","getMaterialsNameForSelectControl","Array","isArray","item","getFirstMaterialName","getTextureById","textureId","get","downloadTexture","canvas","ctx","getContext","image","Image","crossOrigin","onload","drawImage","link","toDataURL","download","click","onerror","deepCloneModel","clonedModel","originalModel","clone","traverse","node","isMesh","geometry","needsUpdate","Promise","resolve","reject","setAttribute","body","createCopy","restoreOriginalImageSrc","imageSrc","isImageSource","str","findParentUntilMultipleChildren","parent","children","sRGBToLinear","rgbaString","color","_","Button","props","modelSrc","setAttributes","__","O3DVSettings","isNavigation","camera","mouseControl","zoom","showEdge","edgeColor","viewerLoaded","setViewerLoaded","parentDiv","useRef","viewerRef","instanceRef","current","Destroy","defaultCamera","OV","Camera","Coord3D","values","eye","center","up","EmbeddedViewer","backgroundColor","RGBAColor","edgeSettings","EdgeSettings","RGBColor","environmentSettings","EnvironmentSettings","posx","posy","posz","negx","negy","negz","LoadModelFromUrlList","VR","viewer","navigation","SetZoomStatus","SetCamera","renderer","resetState","Clear","getExtension","loseContext","tempClone","cloneNode","parentNode","replaceChild","removeChild","hexToRGB","SetBackgroundColor","Resize","offsetWidth","offsetHeight","Render","SetEdgeSettings","ref","role","modelLoader","inProgress","originalObject","GetCamera","JSON","parse","stringify","Viewer","setModelReader","isValid","setIsValid","loadingPercentage","fullscreen","exposure","autoRotate","rotateDelay","autoplay","rotateAlongX","align","rotationPerSecond","preload","currentViewer","loading","environmentImage","oldEnvironmentImage","zoomLevel","toneMapping","isFullscreen","setModelSrc","currentModel","useMemo","selectedVariants","setSelectedVariants","variantRef","animationRef","pause","turntableRotation","resetTurntableRotation","shadow","rotate","rotateAlongY","skybox","useEnvironmentAsSkybox","skyboxImage","removeAttribute","runFistAttempt","ModelReader","removeEventListener","variations","oldData","handleWoocommerceVariantUpdateDefault","container","slickItem","append","parentEl","labels","getAttribute","row","attr","el","handleWoocommerceVariantUpdateForSwatchly","targetElement","observer","MutationObserver","mutationsList","mutation","modelItem","find","product_variant","innerText","config","childList","subtree","observe","arEnabled","arPlacement","arMode","modelISOSrc","modelPoster","every","v","undefined","firstVariant","ID","Class","decoder","alt","scale","ar","arScale","slot","backgroundImage","Basic3DViewer","modelWrapper","progressElement","items","productModalContainer","nextElementSibling","contains","information","selector","clickableItem","host","getClickAbleDom","dispatchEvent","Event","cursor","jQuery","ready","$","slick","slidesToShow","slidesToScroll","arrows","FrontEnd","text","textdomain","elementorFrontend","hooks","addAction","scope","blocks","dom","json","parsedJson","jsonParse","render","getElementById","script","modelViewerSrc","head","Src","o3dviewerSrc"],"sourceRoot":""}